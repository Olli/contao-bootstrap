<?php

/**
 * Contao Open Source CMS
 *
 * Copyright (C) 2005-2012 Leo Feyer
 *
 * @package   netzmacht-columnset
 * @author    David Molineus <http://www.netzmacht.de>
 * @license   GNU/LGPL
 * @copyright Copyright 2012 David Molineus netzmacht creative
 *
 **/


/**
 * bootstrap configuration
 */
$GLOBALS['BOOTSTRAP'] = array
(	
	'general' => array
	(
		// we do not remove the viewport setting, but add a default viewport by replace.addViewport modifier
		'viewport'  => 'width=device-width, initial-scale=1.0',

		// customize default palette. we remove the stuff we do not want to
		// Using this way it is possible for other extensions to plug in the default palette
		// MetaPalettes extending feature can be used
		'metapalette'  => array
		(
			'+title'    => array('layoutType'),
			'-sections' => array('sPosition'),
			'-style'    => array('framework', 'stylesheet', 'external', '+bootstrap_importStylesheets'),
			'+script'   => array('bootstrap_importJavaScripts after theme_plus_javascripts'),
			'-static'   => array('static'),
		),

		// modification of the default subpalettes by using metasubselectpalettes
		'metasubselectpalettes' => array
		(
			'rows' => array
			(
				'2rwh'  => array('bootstrap_headerClass'),
				'2rwf'  => array('bootstrap_footerClass'),
				'3rw'   => array('bootstrap_headerClass', 'bootstrap_footerClass'),
			),

			'cols' => array
			(
				'1cl'    => array(),
				'2cll'   => array('bootstrap_leftClass', 'bootstrap_mainClass'),
				'2clr'   => array('bootstrap_mainClass', 'bootstrap_rightClass'),
				'3cl'    => array('bootstrap_leftClass', 'bootstrap_mainClass', 'bootstrap_rightClass'),
			),
		),
	),

	'assets' => array
	(
		'css' => array
		(
			'bootstrap' => array
			(
				'system/modules/bootstrap/assets/bootstrap/less/bootstrap.less'             => 'bootstrap.less',
				'system/modules/bootstrap/assets/bootstrap/dist/css/bootstrap.min.css'      => 'bootstrap.min.css',
			),

			'bootstrap-select' => array
			(
				'system/modules/bootstrap/assets/bootstrap-select/bootstrap-select.min.css' => 'bootstrap-select.min.css',
			),

			'contao-bootstrap' => array
			(
				'system/modules/bootstrap/assets/css/contao-navigation.css'                   => 'contao-navigation.css',
			)
		),

		'js' => array
		(
			// bootstrap core files
			'bootstrap' => array
			(
				'system/modules/bootstrap/assets/bootstrap/dist/js/bootstrap.min.js' => 'bootstrap.min.js',

				// bootstrap helper files
				'system/modules/bootstrap/assets/bootstrap/assets/js/html5shiv.js'   => 'html5shiv.js',
				'system/modules/bootstrap/assets/bootstrap/assets/js/respond.min.js' => 'respond.min.js',

				// bootstrap components
				'system/modules/bootstrap/assets/bootstrap/js/transition.js' => 'bootstrap-transition.js',
				'system/modules/bootstrap/assets/bootstrap/js/affix.js'      => 'bootstrap-affix.js',
				'system/modules/bootstrap/assets/bootstrap/js/alert.js'      => 'bootstrap-alert.js',
				'system/modules/bootstrap/assets/bootstrap/js/button.js'     => 'bootstrap-button.js',
				'system/modules/bootstrap/assets/bootstrap/js/carousel.js'   => 'bootstrap-carousel.js',
				'system/modules/bootstrap/assets/bootstrap/js/collapse.js'   => 'bootstrap-collapse.js',
				'system/modules/bootstrap/assets/bootstrap/js/dropdown.js'   => 'bootstrap-dropdown.js',
				'system/modules/bootstrap/assets/bootstrap/js/popover.js'    => 'bootstrap-dropdown.js',
				'system/modules/bootstrap/assets/bootstrap/js/modal.js'      => 'bootstrap-modal.js',
				'system/modules/bootstrap/assets/bootstrap/js/popover.js'    => 'bootstrap-popover.js',
				'system/modules/bootstrap/assets/bootstrap/js/scrollspy.js'  => 'bootstrap-scrollspy.js',
				'system/modules/bootstrap/assets/bootstrap/js/tooltip.js'    => 'bootstrap-tooltip.js',
				'system/modules/bootstrap/assets/bootstrap/js/tab.js'        => 'bootstrap-tab.js',
			),

			'bootstrap-select' => array
			(
				// bootstrap selectpicker
				'system/modules/bootstrap/assets/bootstrap-select/bootstrap-select.min.js' => 'bootstrap-select.min.js',
			),

			'contao-bootstrap' => array
			(
				// contao navigation
				'system/modules/bootstrap/assets/js/contao-navigation.js' => 'contao-navigation.js',
			)
		),
	),

	'form' => array
	(
		// form widgets get automatically added the form-control class. elements listed here will be skipped
		'noFormControl'     => array('button', 'submit', 'checkbox', 'radio'),

		// form widgets can be an input group
		'allowInputGroup'   => array('text', 'textarea', 'password', 'captcha'),

		// define which widgets should be generated by a template and not by the default routine
		'generateTemplates' => array
		(
			'checkbox'      => 'form_checkbox_generate',
			'radio'         => 'form_radio_generate',
		),

		// which columns shall be used for the form in table mode
		'tableFormat' => array
		(
			'label'         => 'col-lg-3',
			'control'       => 'col-lg-9',
			'offset'        => 'col-lg-offset-3',
		),

		// which controls are generated without a label. This is used to set offset in the table layout
		'noLabel'           => array('checkbox', 'radio'),

		// how to display forms like comments form by default
		'defaultTableless'  => true,

		// add style select to select list, set to false to disable
		'styleSelect' => array
		(
			'enabled'       => true,
			'class'         => 'selectpicker',
			'defaultStyle'  => 'btn-default',
			'elements'      => array('select'),
		),

		// if form is displayed in a modal these input types are displayed in the footer
		'modalFooter'       => array('button', 'submit'),
	),

	// The bootstrap module supports different icons sets
	'icons' => array
	(
		// registered icons sets
		'sets' => array
		(
			'font-awesome'  => array
			(
				'path'      => 'system/modules/bootstrap/config/icons/font-awesome.php',
				'template'  => '<i class="icon-%s"></i>',
			),
			'glyphicons'    => array
			(
				'path'      => 'system/modules/bootstrap/config/icons/glyphicons.php',
				'template'  => '<span class="glyphicon glyphicon-%s"></span>',
			),
		),

		// the array where all icons are defined
		'set'                  => array(),

		// which tag shall be used for icons
		'template'          => array(),
	),

	'dropdown' => array
	(
		// element which is used as download toggler
		'toggle' => '<b class="caret"></b>',

		'formless' => array
		(
			'mod_quicklink',
			/* 'mod_quicknav' */
		),
	),

	'modal' => array
	(
		'dismiss' => '&times;',

		'adjustForm' => true,

		'remoteUrl' => 'SimpleAjax.php?page=%s&amp;modal=%s',
		'remoteDynamicUrl' => 'SimpleAjax.php?page=%s&amp;modal=%s&amp;dynamic=%s&amp;id=%s',
	),

	'button' => array
	(
		'dataAttributes' => array('target', 'toggle', 'dismiss', 'remote'),
	),


	'templates' => array
	(
		// Define paths for autoloading templates. This is used so that only if bootstrap is activated in the layout
		// the default templates are overridden
		// You can add differnt template directories here.
		'dynamicLoad' => array
		(
			'system/modules/bootstrap/templates/theme' => array
			(
				'ce_accordion',
				'ce_accordion_start',
				'fe_page',
				'form',
				'form_captcha',
				'form_checkbox',
				'form_explanation',
				'form_headline',
				'form_message',
				'form_password',
				'form_radio',
				'form_submit',
				'form_widget',
				'mod_breadcrumb',
				'mod_comment_form',
				'mod_search_advanced',
				'mod_quicklink',
				'mod_quicknav',
				'nav_default',
				'pagination',
			),
		),

		// Configuration of template modifer. They changes templates when being parsed. There are 2 types supported:
		// placeholder or callback. A placeholder try to replace a string of an template variable. A Callback just
		// runs before template is rendered. It's pretty the same like the parseTemplate hook but, you can specify
		// which templates are affected and use anonymous functions
		'modifiers' => array
		(
			// add active class to trail class
			'callback.addActiveClassToTrailItem' => array
			(
				'type'      => 'callback',
				'callback'  => array('Netzmacht\Bootstrap\Template\Modifier', 'addActiveClassToTrailItem'),
				'templates' => array
				(
					'nav_default',
					'nav_bootstrap_dropdown',
				),
			),

			'replace.paginationActiveClass' => array
			(
				'type'        => 'replace',
				'key'         => 'items',
				'search'      => '<li><span class="current">',
				'replace'     => '<li class="active"><span>',
				'templates'   => array('pagination'),
			),

			'callback.setPanelDefaultClass' => array
			(
				'type'      => 'callback',
				'callback'  => array('Netzmacht\Bootstrap\Template\Modifier', 'setPanelDefaultClass'),
				'templates' => array
				(
					'ce_accordion',
					'ce_accordion_start',
				),
			),

			'callback.setNavigationLevel' => array
			(
				'type'      => 'callback',
				'callback'  => array('Netzmacht\Bootstrap\Template\Modifier', 'setNavigationLevel'),
				'templates' => array
				(
					'nav_bootstrap_dropdown',
				),

			),

			// #navClass# placeholder is used for injecting defined nav classes to the rendered items
			'replace.replaceNavClassPlaceholder' => array
			(
				'type'      => 'replace',
				'key'       => 'items',
				'search'    => '__navClass__',
				'replace'   => array('Netzmacht\Bootstrap\Template\Modifier', 'replaceNavClassPlaceholder'),
				'templates' => array
				(
					'mod_navigation',
					'mod_customnav',
				),
			),

			'replace.addViewport' => array
			(
				'type'      => 'replace',
				'key'       => 'viewport',
				'search'    => '',
				'replace'   => $GLOBALS['BOOTSTRAP']['general']['viewport'],
				'templates' => array
				(
					'fe_page',
				)
			),

			'callback.initializeGrid' => array
			(
				'type'      => 'callback',
				'callback'  => array('Netzmacht\Bootstrap\Template\Modifier', 'initializeGrid'),
				'templates' => array
				(
					'fe_page',
				),
			),
		),
	),

	// Wrappers are content elements containing a start, separators and stop elements
	// If they are created a generic callback checks how to create or delete the containing elements
	// Only change this config if you know what you are doing!
	'wrappers' => array
	(
		// Bootstrap tab component
		'tabs' => array
		(
			'start' => array
			(
				'name'          => 'bootstrap_tabStart',
				'triggerCreate' => true, // auto create separators and stop element
				'triggerDelete' => true, // auto deleete separators and stop element
			),

			'separator' => array
			(
				'name'          => 'bootstrap_tabPart',
				'autoCreate'    => true, // can be auto created
				'autoDelete'    => true, // can be auto deleted

				// callback to detect how many separators exists
				'countExisting' => array('Netzmacht\Bootstrap\\DataContainer\\Content', 'countExistingTabSeparators'),

				// callback to detect how many separators are required
				'countRequired' => array('Netzmacht\Bootstrap\\DataContainer\\Content', 'countRequiredTabSeparators'),
			),

			'stop' => array
			(
				'name'       => 'bootstrap_tabEnd',
				'autoCreate' => true,
				'autoDelete' => true,
			),
		),

		// Bootstrap carousel component
		'carousel' => array
		(
			'start' => array
			(
				'name'          => 'bootstrap_carouselStart',
				'autoCreate'    => true,
				'triggerCreate' => true,
				'triggerDelete' => true,
			),

			'separator' => array
			(
				'name'          => 'bootstrap_carouselPart',
				'triggerCreate' => false,
				'autoDelete'    => true,

			),

			'stop' => array
			(
				'name'          => 'bootstrap_carouselEnd',
				'autoCreate'    => true,
				'autoDelete'    => true,
			),
		),

		'accordion' => array
		(
			'start' => array
			(
				'name'          => 'bootstrap_accordionGroupStart',
				'autoCreate'    => true,
				'autoDelete'    => true,
				'triggerCreate' => true,
				'triggerDelete' => true,
			),

			'stop' => array
			(
				'name'          => 'bootstrap_accordionGroupEnd',
				'autoCreate'    => true,
				'autoDelete'    => true,
				'triggerCreate' => true,
				'triggerDelete' => true,
			),
		),
	),
);